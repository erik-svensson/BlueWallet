require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '10.0'

def sharedPods
  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )
end

target 'GoldWallet' do
  sharedPods
  pod 'react-native-config', :path => '../node_modules/react-native-config'
end

target 'GoldWallet Beta' do
  sharedPods
  pod 'react-native-config', :path => '../node_modules/react-native-config'
end

target 'GoldWallet Stage' do
  sharedPods
  pod 'react-native-config', :path => '../node_modules/react-native-config'
end

target 'GoldWallet Dev' do
  sharedPods
  pod 'react-native-config', :path => '../node_modules/react-native-config'

  # Enables Flipper.
  use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)
  end
end

if [ "${CONFIGURATION}" = "Debug" ]; then
  "${PODS_ROOT}/SwiftLint/swiftlint"
 else
  echo "Not running SwiftLint/swiftlint because we are building for Release"
 fi
 if [ "${CONFIGURATION}" = "Release" ]; then
  "${PODS_ROOT}/FirebaseCrashlytics/run"
else
  echo "Not running FirebaseCrashlytics/run because we are building for debug"
fi

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if config.name == 'Debug'
        config.build_settings['OTHER_SWIFT_FLAGS'] = ['$(inherited)', '-Onone']
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
      end
    end
  end
 end
 post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if config.name == 'Debug'
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'singlefile'
      else
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
      end
    end
  end
 end